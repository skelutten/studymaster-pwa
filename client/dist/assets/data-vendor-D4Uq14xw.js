import{R as W}from"./react-vendor-BPGxMsaB.js";import{u as B}from"./vendor-DcwTVR0l.js";const H={},j=o=>{let e;const t=new Set,s=(y,S)=>{const g=typeof y=="function"?y(e):y;if(!Object.is(g,e)){const f=e;e=S??(typeof g!="object"||g===null)?g:Object.assign({},e,g),t.forEach(b=>b(e,f))}},n=()=>e,h={setState:s,getState:n,getInitialState:()=>c,subscribe:y=>(t.add(y),()=>t.delete(y)),destroy:()=>{(H?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),t.clear()}},c=e=o(s,n,h);return h},J=o=>o?j(o):j,x={},{useDebugValue:z}=W,{useSyncExternalStoreWithSelector:M}=B;let q=!1;const G=o=>o;function Q(o,e=G,t){(x?"production":void 0)!=="production"&&t&&!q&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),q=!0);const s=M(o.subscribe,o.getState,o.getServerState||o.getInitialState,e,t);return z(s),s}const V=o=>{(x?"production":void 0)!=="production"&&typeof o!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof o=="function"?J(o):o,t=(s,n)=>Q(e,s,n);return Object.assign(t,e),t},Ce=o=>V;class v extends Error{constructor(e){super("ClientResponseError"),this.url="",this.status=0,this.response={},this.isAbort=!1,this.originalError=null,Object.setPrototypeOf(this,v.prototype),e!==null&&typeof e=="object"&&(this.url=typeof e.url=="string"?e.url:"",this.status=typeof e.status=="number"?e.status:0,this.isAbort=!!e.isAbort,this.originalError=e.originalError,e.response!==null&&typeof e.response=="object"?this.response=e.response:e.data!==null&&typeof e.data=="object"?this.response=e.data:this.response={}),this.originalError||e instanceof v||(this.originalError=e),typeof DOMException<"u"&&e instanceof DOMException&&(this.isAbort=!0),this.name="ClientResponseError "+this.status,this.message=this.response?.message,this.message||(this.isAbort?this.message="The request was autocancelled. You can find more info in https://github.com/pocketbase/js-sdk#auto-cancellation.":this.originalError?.cause?.message?.includes("ECONNREFUSED ::1")?this.message="Failed to connect to the PocketBase server. Try changing the SDK URL from localhost to 127.0.0.1 (https://github.com/pocketbase/js-sdk/issues/21).":this.message="Something went wrong while processing your request.")}get data(){return this.response}toJSON(){return{...this}}}const I=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function Y(o,e){const t={};if(typeof o!="string")return t;const s=Object.assign({},{}).decode||X;let n=0;for(;n<o.length;){const i=o.indexOf("=",n);if(i===-1)break;let r=o.indexOf(";",n);if(r===-1)r=o.length;else if(r<i){n=o.lastIndexOf(";",i-1)+1;continue}const a=o.slice(n,i).trim();if(t[a]===void 0){let h=o.slice(i+1,r).trim();h.charCodeAt(0)===34&&(h=h.slice(1,-1));try{t[a]=s(h)}catch{t[a]=h}}n=r+1}return t}function L(o,e,t){const s=Object.assign({},t||{}),n=s.encode||Z;if(!I.test(o))throw new TypeError("argument name is invalid");const i=n(e);if(i&&!I.test(i))throw new TypeError("argument val is invalid");let r=o+"="+i;if(s.maxAge!=null){const a=s.maxAge-0;if(isNaN(a)||!isFinite(a))throw new TypeError("option maxAge is invalid");r+="; Max-Age="+Math.floor(a)}if(s.domain){if(!I.test(s.domain))throw new TypeError("option domain is invalid");r+="; Domain="+s.domain}if(s.path){if(!I.test(s.path))throw new TypeError("option path is invalid");r+="; Path="+s.path}if(s.expires){if(!function(h){return Object.prototype.toString.call(h)==="[object Date]"||h instanceof Date}(s.expires)||isNaN(s.expires.valueOf()))throw new TypeError("option expires is invalid");r+="; Expires="+s.expires.toUTCString()}if(s.httpOnly&&(r+="; HttpOnly"),s.secure&&(r+="; Secure"),s.priority)switch(typeof s.priority=="string"?s.priority.toLowerCase():s.priority){case"low":r+="; Priority=Low";break;case"medium":r+="; Priority=Medium";break;case"high":r+="; Priority=High";break;default:throw new TypeError("option priority is invalid")}if(s.sameSite)switch(typeof s.sameSite=="string"?s.sameSite.toLowerCase():s.sameSite){case!0:r+="; SameSite=Strict";break;case"lax":r+="; SameSite=Lax";break;case"strict":r+="; SameSite=Strict";break;case"none":r+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return r}function X(o){return o.indexOf("%")!==-1?decodeURIComponent(o):o}function Z(o){return encodeURIComponent(o)}const ee=typeof navigator<"u"&&navigator.product==="ReactNative"||typeof global<"u"&&global.HermesInternal;let N;function P(o){if(o)try{const e=decodeURIComponent(N(o.split(".")[1]).split("").map(function(t){return"%"+("00"+t.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(e)||{}}catch{}return{}}function D(o,e=0){let t=P(o);return!(Object.keys(t).length>0&&(!t.exp||t.exp-e>Date.now()/1e3))}N=typeof atob!="function"||ee?o=>{let e=String(o).replace(/=+$/,"");if(e.length%4==1)throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");for(var t,s,n=0,i=0,r="";s=e.charAt(i++);~s&&(t=n%4?64*t+s:s,n++%4)?r+=String.fromCharCode(255&t>>(-2*n&6)):0)s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(s);return r}:atob;const U="pb_auth";class te{constructor(){this.baseToken="",this.baseModel=null,this._onChangeCallbacks=[]}get token(){return this.baseToken}get model(){return this.baseModel}get isValid(){return!D(this.token)}get isAdmin(){return P(this.token).type==="admin"}get isAuthRecord(){return P(this.token).type==="authRecord"}save(e,t){this.baseToken=e||"",this.baseModel=t||null,this.triggerChange()}clear(){this.baseToken="",this.baseModel=null,this.triggerChange()}loadFromCookie(e,t=U){const s=Y(e||"")[t]||"";let n={};try{n=JSON.parse(s),(typeof n===null||typeof n!="object"||Array.isArray(n))&&(n={})}catch{}this.save(n.token||"",n.model||null)}exportToCookie(e,t=U){const s={secure:!0,sameSite:!0,httpOnly:!0,path:"/"},n=P(this.token);s.expires=n?.exp?new Date(1e3*n.exp):new Date("1970-01-01"),e=Object.assign({},s,e);const i={token:this.token,model:this.model?JSON.parse(JSON.stringify(this.model)):null};let r=L(t,JSON.stringify(i),e);const a=typeof Blob<"u"?new Blob([r]).size:r.length;if(i.model&&a>4096){i.model={id:i?.model?.id,email:i?.model?.email};const h=["collectionId","username","verified"];for(const c in this.model)h.includes(c)&&(i.model[c]=this.model[c]);r=L(t,JSON.stringify(i),e)}return r}onChange(e,t=!1){return this._onChangeCallbacks.push(e),t&&e(this.token,this.model),()=>{for(let s=this._onChangeCallbacks.length-1;s>=0;s--)if(this._onChangeCallbacks[s]==e)return delete this._onChangeCallbacks[s],void this._onChangeCallbacks.splice(s,1)}}triggerChange(){for(const e of this._onChangeCallbacks)e&&e(this.token,this.model)}}class se extends te{constructor(e="pocketbase_auth"){super(),this.storageFallback={},this.storageKey=e,this._bindStorageEvent()}get token(){return(this._storageGet(this.storageKey)||{}).token||""}get model(){return(this._storageGet(this.storageKey)||{}).model||null}save(e,t){this._storageSet(this.storageKey,{token:e,model:t}),super.save(e,t)}clear(){this._storageRemove(this.storageKey),super.clear()}_storageGet(e){if(typeof window<"u"&&window?.localStorage){const t=window.localStorage.getItem(e)||"";try{return JSON.parse(t)}catch{return t}}return this.storageFallback[e]}_storageSet(e,t){if(typeof window<"u"&&window?.localStorage){let s=t;typeof t!="string"&&(s=JSON.stringify(t)),window.localStorage.setItem(e,s)}else this.storageFallback[e]=t}_storageRemove(e){typeof window<"u"&&window?.localStorage&&window.localStorage?.removeItem(e),delete this.storageFallback[e]}_bindStorageEvent(){typeof window<"u"&&window?.localStorage&&window.addEventListener&&window.addEventListener("storage",e=>{if(e.key!=this.storageKey)return;const t=this._storageGet(this.storageKey)||{};super.save(t.token||"",t.model||null)})}}class O{constructor(e){this.client=e}}class ne extends O{async getAll(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/settings",e)}async update(e,t){return t=Object.assign({method:"PATCH",body:e},t),this.client.send("/api/settings",t)}async testS3(e="storage",t){return t=Object.assign({method:"POST",body:{filesystem:e}},t),this.client.send("/api/settings/test/s3",t).then(()=>!0)}async testEmail(e,t,s){return s=Object.assign({method:"POST",body:{email:e,template:t}},s),this.client.send("/api/settings/test/email",s).then(()=>!0)}async generateAppleClientSecret(e,t,s,n,i,r){return r=Object.assign({method:"POST",body:{clientId:e,teamId:t,keyId:s,privateKey:n,duration:i}},r),this.client.send("/api/settings/apple/generate-client-secret",r)}}class A extends O{decode(e){return e}async getFullList(e,t){if(typeof e=="number")return this._getFullList(e,t);let s=500;return(t=Object.assign({},e,t)).batch&&(s=t.batch,delete t.batch),this._getFullList(s,t)}async getList(e=1,t=30,s){return(s=Object.assign({method:"GET"},s)).query=Object.assign({page:e,perPage:t},s.query),this.client.send(this.baseCrudPath,s).then(n=>(n.items=n.items?.map(i=>this.decode(i))||[],n))}async getFirstListItem(e,t){return(t=Object.assign({requestKey:"one_by_filter_"+this.baseCrudPath+"_"+e},t)).query=Object.assign({filter:e,skipTotal:1},t.query),this.getList(1,1,t).then(s=>{if(!s?.items?.length)throw new v({status:404,response:{code:404,message:"The requested resource wasn't found.",data:{}}});return s.items[0]})}async getOne(e,t){if(!e)throw new v({url:this.client.buildUrl(this.baseCrudPath+"/"),status:404,response:{code:404,message:"Missing required record id.",data:{}}});return t=Object.assign({method:"GET"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),t).then(s=>this.decode(s))}async create(e,t){return t=Object.assign({method:"POST",body:e},t),this.client.send(this.baseCrudPath,t).then(s=>this.decode(s))}async update(e,t,s){return s=Object.assign({method:"PATCH",body:t},s),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),s).then(n=>this.decode(n))}async delete(e,t){return t=Object.assign({method:"DELETE"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),t).then(()=>!0)}_getFullList(e=500,t){(t=t||{}).query=Object.assign({skipTotal:1},t.query);let s=[],n=async i=>this.getList(i,e||500,t).then(r=>{const a=r.items;return s=s.concat(a),a.length==r.perPage?n(i+1):s});return n(1)}}function w(o,e,t,s){const n=s!==void 0;return n||t!==void 0?n?(console.warn(o),e.body=Object.assign({},e.body,t),e.query=Object.assign({},e.query,s),e):Object.assign(e,t):e}function R(o){o._resetAutoRefresh?.()}class ie extends A{get baseCrudPath(){return"/api/admins"}async update(e,t,s){return super.update(e,t,s).then(n=>(this.client.authStore.model?.id===n.id&&this.client.authStore.model?.collectionId===void 0&&this.client.authStore.save(this.client.authStore.token,n),n))}async delete(e,t){return super.delete(e,t).then(s=>(s&&this.client.authStore.model?.id===e&&this.client.authStore.model?.collectionId===void 0&&this.client.authStore.clear(),s))}authResponse(e){const t=this.decode(e?.admin||{});return e?.token&&e?.admin&&this.client.authStore.save(e.token,t),Object.assign({},e,{token:e?.token||"",admin:t})}async authWithPassword(e,t,s,n){let i={method:"POST",body:{identity:e,password:t}};i=w("This form of authWithPassword(email, pass, body?, query?) is deprecated. Consider replacing it with authWithPassword(email, pass, options?).",i,s,n);const r=i.autoRefreshThreshold;delete i.autoRefreshThreshold,i.autoRefresh||R(this.client);let a=await this.client.send(this.baseCrudPath+"/auth-with-password",i);return a=this.authResponse(a),r&&function(c,y,S,g){R(c);const f=c.beforeSend,b=c.authStore.model,p=c.authStore.onChange((l,u)=>{(!l||u?.id!=b?.id||(u?.collectionId||b?.collectionId)&&u?.collectionId!=b?.collectionId)&&R(c)});c._resetAutoRefresh=function(){p(),c.beforeSend=f,delete c._resetAutoRefresh},c.beforeSend=async(l,u)=>{const d=c.authStore.token;if(u.query?.autoRefresh)return f?f(l,u):{url:l,sendOptions:u};let m=c.authStore.isValid;if(m&&D(c.authStore.token,y))try{await S()}catch{m=!1}m||await g();const C=u.headers||{};for(let E in C)if(E.toLowerCase()=="authorization"&&d==C[E]&&c.authStore.token){C[E]=c.authStore.token;break}return u.headers=C,f?f(l,u):{url:l,sendOptions:u}}}(this.client,r,()=>this.authRefresh({autoRefresh:!0}),()=>this.authWithPassword(e,t,Object.assign({autoRefresh:!0},i))),a}async authRefresh(e,t){let s={method:"POST"};return s=w("This form of authRefresh(body?, query?) is deprecated. Consider replacing it with authRefresh(options?).",s,e,t),this.client.send(this.baseCrudPath+"/auth-refresh",s).then(this.authResponse.bind(this))}async requestPasswordReset(e,t,s){let n={method:"POST",body:{email:e}};return n=w("This form of requestPasswordReset(email, body?, query?) is deprecated. Consider replacing it with requestPasswordReset(email, options?).",n,t,s),this.client.send(this.baseCrudPath+"/request-password-reset",n).then(()=>!0)}async confirmPasswordReset(e,t,s,n,i){let r={method:"POST",body:{token:e,password:t,passwordConfirm:s}};return r=w("This form of confirmPasswordReset(resetToken, password, passwordConfirm, body?, query?) is deprecated. Consider replacing it with confirmPasswordReset(resetToken, password, passwordConfirm, options?).",r,n,i),this.client.send(this.baseCrudPath+"/confirm-password-reset",r).then(()=>!0)}}const re=["requestKey","$cancelKey","$autoCancel","fetch","headers","body","query","params","cache","credentials","headers","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","window"];function F(o){if(o){o.query=o.query||{};for(let e in o)re.includes(e)||(o.query[e]=o[e],delete o[e])}}class $ extends O{constructor(){super(...arguments),this.clientId="",this.eventSource=null,this.subscriptions={},this.lastSentSubscriptions=[],this.maxConnectTimeout=15e3,this.reconnectAttempts=0,this.maxReconnectAttempts=1/0,this.predefinedReconnectIntervals=[200,300,500,1e3,1200,1500,2e3],this.pendingConnects=[]}get isConnected(){return!!this.eventSource&&!!this.clientId&&!this.pendingConnects.length}async subscribe(e,t,s){if(!e)throw new Error("topic must be set.");let n=e;if(s){F(s=Object.assign({},s));const r="options="+encodeURIComponent(JSON.stringify({query:s.query,headers:s.headers}));n+=(n.includes("?")?"&":"?")+r}const i=function(r){const a=r;let h;try{h=JSON.parse(a?.data)}catch{}t(h||{})};return this.subscriptions[n]||(this.subscriptions[n]=[]),this.subscriptions[n].push(i),this.isConnected?this.subscriptions[n].length===1?await this.submitSubscriptions():this.eventSource?.addEventListener(n,i):await this.connect(),async()=>this.unsubscribeByTopicAndListener(e,i)}async unsubscribe(e){let t=!1;if(e){const s=this.getSubscriptionsByTopic(e);for(let n in s)if(this.hasSubscriptionListeners(n)){for(let i of this.subscriptions[n])this.eventSource?.removeEventListener(n,i);delete this.subscriptions[n],t||(t=!0)}}else this.subscriptions={};this.hasSubscriptionListeners()?t&&await this.submitSubscriptions():this.disconnect()}async unsubscribeByPrefix(e){let t=!1;for(let s in this.subscriptions)if((s+"?").startsWith(e)){t=!0;for(let n of this.subscriptions[s])this.eventSource?.removeEventListener(s,n);delete this.subscriptions[s]}t&&(this.hasSubscriptionListeners()?await this.submitSubscriptions():this.disconnect())}async unsubscribeByTopicAndListener(e,t){let s=!1;const n=this.getSubscriptionsByTopic(e);for(let i in n){if(!Array.isArray(this.subscriptions[i])||!this.subscriptions[i].length)continue;let r=!1;for(let a=this.subscriptions[i].length-1;a>=0;a--)this.subscriptions[i][a]===t&&(r=!0,delete this.subscriptions[i][a],this.subscriptions[i].splice(a,1),this.eventSource?.removeEventListener(i,t));r&&(this.subscriptions[i].length||delete this.subscriptions[i],s||this.hasSubscriptionListeners(i)||(s=!0))}this.hasSubscriptionListeners()?s&&await this.submitSubscriptions():this.disconnect()}hasSubscriptionListeners(e){if(this.subscriptions=this.subscriptions||{},e)return!!this.subscriptions[e]?.length;for(let t in this.subscriptions)if(this.subscriptions[t]?.length)return!0;return!1}async submitSubscriptions(){if(this.clientId)return this.addAllSubscriptionListeners(),this.lastSentSubscriptions=this.getNonEmptySubscriptionKeys(),this.client.send("/api/realtime",{method:"POST",body:{clientId:this.clientId,subscriptions:this.lastSentSubscriptions},requestKey:this.getSubscriptionsCancelKey()}).catch(e=>{if(!e?.isAbort)throw e})}getSubscriptionsCancelKey(){return"realtime_"+this.clientId}getSubscriptionsByTopic(e){const t={};e=e.includes("?")?e:e+"?";for(let s in this.subscriptions)(s+"?").startsWith(e)&&(t[s]=this.subscriptions[s]);return t}getNonEmptySubscriptionKeys(){const e=[];for(let t in this.subscriptions)this.subscriptions[t].length&&e.push(t);return e}addAllSubscriptionListeners(){if(this.eventSource){this.removeAllSubscriptionListeners();for(let e in this.subscriptions)for(let t of this.subscriptions[e])this.eventSource.addEventListener(e,t)}}removeAllSubscriptionListeners(){if(this.eventSource)for(let e in this.subscriptions)for(let t of this.subscriptions[e])this.eventSource.removeEventListener(e,t)}async connect(){if(!(this.reconnectAttempts>0))return new Promise((e,t)=>{this.pendingConnects.push({resolve:e,reject:t}),this.pendingConnects.length>1||this.initConnect()})}initConnect(){this.disconnect(!0),clearTimeout(this.connectTimeoutId),this.connectTimeoutId=setTimeout(()=>{this.connectErrorHandler(new Error("EventSource connect took too long."))},this.maxConnectTimeout),this.eventSource=new EventSource(this.client.buildUrl("/api/realtime")),this.eventSource.onerror=e=>{this.connectErrorHandler(new Error("Failed to establish realtime connection."))},this.eventSource.addEventListener("PB_CONNECT",e=>{const t=e;this.clientId=t?.lastEventId,this.submitSubscriptions().then(async()=>{let s=3;for(;this.hasUnsentSubscriptions()&&s>0;)s--,await this.submitSubscriptions()}).then(()=>{for(let n of this.pendingConnects)n.resolve();this.pendingConnects=[],this.reconnectAttempts=0,clearTimeout(this.reconnectTimeoutId),clearTimeout(this.connectTimeoutId);const s=this.getSubscriptionsByTopic("PB_CONNECT");for(let n in s)for(let i of s[n])i(e)}).catch(s=>{this.clientId="",this.connectErrorHandler(s)})})}hasUnsentSubscriptions(){const e=this.getNonEmptySubscriptionKeys();if(e.length!=this.lastSentSubscriptions.length)return!0;for(const t of e)if(!this.lastSentSubscriptions.includes(t))return!0;return!1}connectErrorHandler(e){if(clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),!this.clientId&&!this.reconnectAttempts||this.reconnectAttempts>this.maxReconnectAttempts){for(let s of this.pendingConnects)s.reject(new v(e));return this.pendingConnects=[],void this.disconnect()}this.disconnect(!0);const t=this.predefinedReconnectIntervals[this.reconnectAttempts]||this.predefinedReconnectIntervals[this.predefinedReconnectIntervals.length-1];this.reconnectAttempts++,this.reconnectTimeoutId=setTimeout(()=>{this.initConnect()},t)}disconnect(e=!1){if(clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),this.removeAllSubscriptionListeners(),this.client.cancelRequest(this.getSubscriptionsCancelKey()),this.eventSource?.close(),this.eventSource=null,this.clientId="",!e){this.reconnectAttempts=0;for(let t of this.pendingConnects)t.resolve();this.pendingConnects=[]}}}class oe extends A{constructor(e,t){super(e),this.collectionIdOrName=t}get baseCrudPath(){return this.baseCollectionPath+"/records"}get baseCollectionPath(){return"/api/collections/"+encodeURIComponent(this.collectionIdOrName)}async subscribe(e,t,s){if(!e)throw new Error("Missing topic.");if(!t)throw new Error("Missing subscription callback.");return this.client.realtime.subscribe(this.collectionIdOrName+"/"+e,t,s)}async unsubscribe(e){return e?this.client.realtime.unsubscribe(this.collectionIdOrName+"/"+e):this.client.realtime.unsubscribeByPrefix(this.collectionIdOrName)}async getFullList(e,t){if(typeof e=="number")return super.getFullList(e,t);const s=Object.assign({},e,t);return super.getFullList(s)}async getList(e=1,t=30,s){return super.getList(e,t,s)}async getFirstListItem(e,t){return super.getFirstListItem(e,t)}async getOne(e,t){return super.getOne(e,t)}async create(e,t){return super.create(e,t)}async update(e,t,s){return super.update(e,t,s).then(n=>(this.client.authStore.model?.id!==n?.id||this.client.authStore.model?.collectionId!==this.collectionIdOrName&&this.client.authStore.model?.collectionName!==this.collectionIdOrName||this.client.authStore.save(this.client.authStore.token,n),n))}async delete(e,t){return super.delete(e,t).then(s=>(!s||this.client.authStore.model?.id!==e||this.client.authStore.model?.collectionId!==this.collectionIdOrName&&this.client.authStore.model?.collectionName!==this.collectionIdOrName||this.client.authStore.clear(),s))}authResponse(e){const t=this.decode(e?.record||{});return this.client.authStore.save(e?.token,t),Object.assign({},e,{token:e?.token||"",record:t})}async listAuthMethods(e){return e=Object.assign({method:"GET"},e),this.client.send(this.baseCollectionPath+"/auth-methods",e).then(t=>Object.assign({},t,{usernamePassword:!!t?.usernamePassword,emailPassword:!!t?.emailPassword,authProviders:Array.isArray(t?.authProviders)?t?.authProviders:[]}))}async authWithPassword(e,t,s,n){let i={method:"POST",body:{identity:e,password:t}};return i=w("This form of authWithPassword(usernameOrEmail, pass, body?, query?) is deprecated. Consider replacing it with authWithPassword(usernameOrEmail, pass, options?).",i,s,n),this.client.send(this.baseCollectionPath+"/auth-with-password",i).then(r=>this.authResponse(r))}async authWithOAuth2Code(e,t,s,n,i,r,a){let h={method:"POST",body:{provider:e,code:t,codeVerifier:s,redirectUrl:n,createData:i}};return h=w("This form of authWithOAuth2Code(provider, code, codeVerifier, redirectUrl, createData?, body?, query?) is deprecated. Consider replacing it with authWithOAuth2Code(provider, code, codeVerifier, redirectUrl, createData?, options?).",h,r,a),this.client.send(this.baseCollectionPath+"/auth-with-oauth2",h).then(c=>this.authResponse(c))}authWithOAuth2(...e){if(e.length>1||typeof e?.[0]=="string")return console.warn("PocketBase: This form of authWithOAuth2() is deprecated and may get removed in the future. Please replace with authWithOAuth2Code() OR use the authWithOAuth2() realtime form as shown in https://pocketbase.io/docs/authentication/#oauth2-integration."),this.authWithOAuth2Code(e?.[0]||"",e?.[1]||"",e?.[2]||"",e?.[3]||"",e?.[4]||{},e?.[5]||{},e?.[6]||{});const t=e?.[0]||{};let s=null;t.urlCallback||(s=_(void 0));const n=new $(this.client);function i(){s?.close(),n.unsubscribe()}const r={},a=t.requestKey;return a&&(r.requestKey=a),this.listAuthMethods(r).then(h=>{const c=h.authProviders.find(g=>g.name===t.provider);if(!c)throw new v(new Error(`Missing or invalid provider "${t.provider}".`));const y=this.client.buildUrl("/api/oauth2-redirect"),S=a?this.client.cancelControllers?.[a]:void 0;return S&&(S.signal.onabort=()=>{i()}),new Promise(async(g,f)=>{try{await n.subscribe("@oauth2",async u=>{const d=n.clientId;try{if(!u.state||d!==u.state)throw new Error("State parameters don't match.");if(u.error||!u.code)throw new Error("OAuth2 redirect error or missing code: "+u.error);const m=Object.assign({},t);delete m.provider,delete m.scopes,delete m.createData,delete m.urlCallback,S?.signal?.onabort&&(S.signal.onabort=null);const C=await this.authWithOAuth2Code(c.name,u.code,c.codeVerifier,y,t.createData,m);g(C)}catch(m){f(new v(m))}i()});const b={state:n.clientId};t.scopes?.length&&(b.scope=t.scopes.join(" "));const p=this._replaceQueryParams(c.authUrl+y,b);await(t.urlCallback||function(u){s?s.location.href=u:s=_(u)})(p)}catch(b){i(),f(new v(b))}})}).catch(h=>{throw i(),h})}async authRefresh(e,t){let s={method:"POST"};return s=w("This form of authRefresh(body?, query?) is deprecated. Consider replacing it with authRefresh(options?).",s,e,t),this.client.send(this.baseCollectionPath+"/auth-refresh",s).then(n=>this.authResponse(n))}async requestPasswordReset(e,t,s){let n={method:"POST",body:{email:e}};return n=w("This form of requestPasswordReset(email, body?, query?) is deprecated. Consider replacing it with requestPasswordReset(email, options?).",n,t,s),this.client.send(this.baseCollectionPath+"/request-password-reset",n).then(()=>!0)}async confirmPasswordReset(e,t,s,n,i){let r={method:"POST",body:{token:e,password:t,passwordConfirm:s}};return r=w("This form of confirmPasswordReset(token, password, passwordConfirm, body?, query?) is deprecated. Consider replacing it with confirmPasswordReset(token, password, passwordConfirm, options?).",r,n,i),this.client.send(this.baseCollectionPath+"/confirm-password-reset",r).then(()=>!0)}async requestVerification(e,t,s){let n={method:"POST",body:{email:e}};return n=w("This form of requestVerification(email, body?, query?) is deprecated. Consider replacing it with requestVerification(email, options?).",n,t,s),this.client.send(this.baseCollectionPath+"/request-verification",n).then(()=>!0)}async confirmVerification(e,t,s){let n={method:"POST",body:{token:e}};return n=w("This form of confirmVerification(token, body?, query?) is deprecated. Consider replacing it with confirmVerification(token, options?).",n,t,s),this.client.send(this.baseCollectionPath+"/confirm-verification",n).then(()=>{const i=P(e),r=this.client.authStore.model;return r&&!r.verified&&r.id===i.id&&r.collectionId===i.collectionId&&(r.verified=!0,this.client.authStore.save(this.client.authStore.token,r)),!0})}async requestEmailChange(e,t,s){let n={method:"POST",body:{newEmail:e}};return n=w("This form of requestEmailChange(newEmail, body?, query?) is deprecated. Consider replacing it with requestEmailChange(newEmail, options?).",n,t,s),this.client.send(this.baseCollectionPath+"/request-email-change",n).then(()=>!0)}async confirmEmailChange(e,t,s,n){let i={method:"POST",body:{token:e,password:t}};return i=w("This form of confirmEmailChange(token, password, body?, query?) is deprecated. Consider replacing it with confirmEmailChange(token, password, options?).",i,s,n),this.client.send(this.baseCollectionPath+"/confirm-email-change",i).then(()=>{const r=P(e),a=this.client.authStore.model;return a&&a.id===r.id&&a.collectionId===r.collectionId&&this.client.authStore.clear(),!0})}async listExternalAuths(e,t){return t=Object.assign({method:"GET"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e)+"/external-auths",t)}async unlinkExternalAuth(e,t,s){return s=Object.assign({method:"DELETE"},s),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e)+"/external-auths/"+encodeURIComponent(t),s).then(()=>!0)}_replaceQueryParams(e,t={}){let s=e,n="";e.indexOf("?")>=0&&(s=e.substring(0,e.indexOf("?")),n=e.substring(e.indexOf("?")+1));const i={},r=n.split("&");for(const a of r){if(a=="")continue;const h=a.split("=");i[decodeURIComponent(h[0].replace(/\+/g," "))]=decodeURIComponent((h[1]||"").replace(/\+/g," "))}for(let a in t)t.hasOwnProperty(a)&&(t[a]==null?delete i[a]:i[a]=t[a]);n="";for(let a in i)i.hasOwnProperty(a)&&(n!=""&&(n+="&"),n+=encodeURIComponent(a.replace(/%20/g,"+"))+"="+encodeURIComponent(i[a].replace(/%20/g,"+")));return n!=""?s+"?"+n:s}}function _(o){if(typeof window>"u"||!window?.open)throw new v(new Error("Not in a browser context - please pass a custom urlCallback function."));let e=1024,t=768,s=window.innerWidth,n=window.innerHeight;e=e>s?s:e,t=t>n?n:t;let i=s/2-e/2,r=n/2-t/2;return window.open(o,"popup_window","width="+e+",height="+t+",top="+r+",left="+i+",resizable,menubar=no")}class ae extends A{get baseCrudPath(){return"/api/collections"}async import(e,t=!1,s){return s=Object.assign({method:"PUT",body:{collections:e,deleteMissing:t}},s),this.client.send(this.baseCrudPath+"/import",s).then(()=>!0)}}class ce extends O{async getList(e=1,t=30,s){return(s=Object.assign({method:"GET"},s)).query=Object.assign({page:e,perPage:t},s.query),this.client.send("/api/logs",s)}async getOne(e,t){if(!e)throw new v({url:this.client.buildUrl("/api/logs/"),status:404,response:{code:404,message:"Missing required log id.",data:{}}});return t=Object.assign({method:"GET"},t),this.client.send("/api/logs/"+encodeURIComponent(e),t)}async getStats(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/logs/stats",e)}}class le extends O{async check(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/health",e)}}class he extends O{getUrl(e,t,s={}){if(!t||!e?.id||!e?.collectionId&&!e?.collectionName)return"";const n=[];n.push("api"),n.push("files"),n.push(encodeURIComponent(e.collectionId||e.collectionName)),n.push(encodeURIComponent(e.id)),n.push(encodeURIComponent(t));let i=this.client.buildUrl(n.join("/"));if(Object.keys(s).length){s.download===!1&&delete s.download;const r=new URLSearchParams(s);i+=(i.includes("?")?"&":"?")+r}return i}async getToken(e){return e=Object.assign({method:"POST"},e),this.client.send("/api/files/token",e).then(t=>t?.token||"")}}class ue extends O{async getFullList(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/backups",e)}async create(e,t){return t=Object.assign({method:"POST",body:{name:e}},t),this.client.send("/api/backups",t).then(()=>!0)}async upload(e,t){return t=Object.assign({method:"POST",body:e},t),this.client.send("/api/backups/upload",t).then(()=>!0)}async delete(e,t){return t=Object.assign({method:"DELETE"},t),this.client.send(`/api/backups/${encodeURIComponent(e)}`,t).then(()=>!0)}async restore(e,t){return t=Object.assign({method:"POST"},t),this.client.send(`/api/backups/${encodeURIComponent(e)}/restore`,t).then(()=>!0)}getDownloadUrl(e,t){return this.client.buildUrl(`/api/backups/${encodeURIComponent(t)}?token=${encodeURIComponent(e)}`)}}class de{constructor(e="/",t,s="en-US"){this.cancelControllers={},this.recordServices={},this.enableAutoCancellation=!0,this.baseUrl=e,this.lang=s,this.authStore=t||new se,this.admins=new ie(this),this.collections=new ae(this),this.files=new he(this),this.logs=new ce(this),this.settings=new ne(this),this.realtime=new $(this),this.health=new le(this),this.backups=new ue(this)}collection(e){return this.recordServices[e]||(this.recordServices[e]=new oe(this,e)),this.recordServices[e]}autoCancellation(e){return this.enableAutoCancellation=!!e,this}cancelRequest(e){return this.cancelControllers[e]&&(this.cancelControllers[e].abort(),delete this.cancelControllers[e]),this}cancelAllRequests(){for(let e in this.cancelControllers)this.cancelControllers[e].abort();return this.cancelControllers={},this}filter(e,t){if(!t)return e;for(let s in t){let n=t[s];switch(typeof n){case"boolean":case"number":n=""+n;break;case"string":n="'"+n.replace(/'/g,"\\'")+"'";break;default:n=n===null?"null":n instanceof Date?"'"+n.toISOString().replace("T"," ")+"'":"'"+JSON.stringify(n).replace(/'/g,"\\'")+"'"}e=e.replaceAll("{:"+s+"}",n)}return e}getFileUrl(e,t,s={}){return this.files.getUrl(e,t,s)}buildUrl(e){let t=this.baseUrl;return typeof window>"u"||!window.location||t.startsWith("https://")||t.startsWith("http://")||(t=window.location.origin?.endsWith("/")?window.location.origin.substring(0,window.location.origin.length-1):window.location.origin||"",this.baseUrl.startsWith("/")||(t+=window.location.pathname||"/",t+=t.endsWith("/")?"":"/"),t+=this.baseUrl),e&&(t+=t.endsWith("/")?"":"/",t+=e.startsWith("/")?e.substring(1):e),t}async send(e,t){t=this.initSendOptions(e,t);let s=this.buildUrl(e);if(this.beforeSend){const n=Object.assign({},await this.beforeSend(s,t));n.url!==void 0||n.options!==void 0?(s=n.url||s,t=n.options||t):Object.keys(n).length&&(t=n,console?.warn&&console.warn("Deprecated format of beforeSend return: please use `return { url, options }`, instead of `return options`."))}if(t.query!==void 0){const n=this.serializeQueryParams(t.query);n&&(s+=(s.includes("?")?"&":"?")+n),delete t.query}return this.getHeader(t.headers,"Content-Type")=="application/json"&&t.body&&typeof t.body!="string"&&(t.body=JSON.stringify(t.body)),(t.fetch||fetch)(s,t).then(async n=>{let i={};try{i=await n.json()}catch{}if(this.afterSend&&(i=await this.afterSend(n,i)),n.status>=400)throw new v({url:n.url,status:n.status,data:i});return i}).catch(n=>{throw new v(n)})}initSendOptions(e,t){if((t=Object.assign({method:"GET"},t)).body=this.convertToFormDataIfNeeded(t.body),F(t),t.query=Object.assign({},t.params,t.query),t.requestKey===void 0&&(t.$autoCancel===!1||t.query.$autoCancel===!1?t.requestKey=null:(t.$cancelKey||t.query.$cancelKey)&&(t.requestKey=t.$cancelKey||t.query.$cancelKey)),delete t.$autoCancel,delete t.query.$autoCancel,delete t.$cancelKey,delete t.query.$cancelKey,this.getHeader(t.headers,"Content-Type")!==null||this.isFormData(t.body)||(t.headers=Object.assign({},t.headers,{"Content-Type":"application/json"})),this.getHeader(t.headers,"Accept-Language")===null&&(t.headers=Object.assign({},t.headers,{"Accept-Language":this.lang})),this.authStore.token&&this.getHeader(t.headers,"Authorization")===null&&(t.headers=Object.assign({},t.headers,{Authorization:this.authStore.token})),this.enableAutoCancellation&&t.requestKey!==null){const s=t.requestKey||(t.method||"GET")+e;delete t.requestKey,this.cancelRequest(s);const n=new AbortController;this.cancelControllers[s]=n,t.signal=n.signal}return t}convertToFormDataIfNeeded(e){if(typeof FormData>"u"||e===void 0||typeof e!="object"||e===null||this.isFormData(e)||!this.hasBlobField(e))return e;const t=new FormData;for(const s in e){const n=e[s];if(typeof n!="object"||this.hasBlobField({data:n})){const i=Array.isArray(n)?n:[n];for(let r of i)t.append(s,r)}else{let i={};i[s]=n,t.append("@jsonPayload",JSON.stringify(i))}}return t}hasBlobField(e){for(const t in e){const s=Array.isArray(e[t])?e[t]:[e[t]];for(const n of s)if(typeof Blob<"u"&&n instanceof Blob||typeof File<"u"&&n instanceof File)return!0}return!1}getHeader(e,t){e=e||{},t=t.toLowerCase();for(let s in e)if(s.toLowerCase()==t)return e[s];return null}isFormData(e){return e&&(e.constructor.name==="FormData"||typeof FormData<"u"&&e instanceof FormData)}serializeQueryParams(e){const t=[];for(const s in e){if(e[s]===null)continue;const n=e[s],i=encodeURIComponent(s);if(Array.isArray(n))for(const r of n)t.push(i+"="+encodeURIComponent(r));else n instanceof Date?t.push(i+"="+encodeURIComponent(n.toISOString())):typeof n!==null&&typeof n=="object"?t.push(i+"="+encodeURIComponent(JSON.stringify(n))):t.push(i+"="+encodeURIComponent(n))}return t.join("&")}}class pe{enabled=!0;formatTimestamp(){return new Date().toISOString()}formatMessage(e){return`${e.timestamp} ${e.prefix} ${e.action}`}logWithLevel(e){if(!this.enabled)return;const t=this.formatMessage(e),s=e.level||"log";switch((s==="error"||e.action.includes("START")||e.action.includes("BEGIN"))&&console.log(`
${"=".repeat(80)}`),s){case"error":console.error(t,e.data||""),e.data?.stack&&console.error("Stack trace:",e.data.stack);break;case"warn":console.warn(t,e.data||"");break;case"info":console.info(t,e.data||"");break;default:console.log(t,e.data||"")}(s==="error"||e.action.includes("END")||e.action.includes("COMPLETE"))&&console.log(`${"=".repeat(80)}
`)}log(e,t,s){this.logWithLevel({timestamp:this.formatTimestamp(),prefix:e,action:t,data:s,level:"log"})}info(e,t,s){this.logWithLevel({timestamp:this.formatTimestamp(),prefix:e,action:t,data:s,level:"info"})}warn(e,t,s){this.logWithLevel({timestamp:this.formatTimestamp(),prefix:e,action:t,data:s,level:"warn"})}error(e,t,s){this.logWithLevel({timestamp:this.formatTimestamp(),prefix:e,action:t,data:s,level:"error"})}group(e,t,s){if(!this.enabled){s();return}console.group(`${this.formatTimestamp()} ${e} ${t}`);try{s()}finally{console.groupEnd()}}logObject(e,t,s){this.log(e,t,JSON.stringify(s,null,2))}logUrl(e,t,s){const n=typeof s=="string"?new URL(s):s,i={href:n.href,origin:n.origin,pathname:n.pathname,search:n.search,hash:n.hash,searchParams:Object.fromEntries(n.searchParams),hashParams:this.parseHashParams(n.hash)};this.group(e,`${t} - URL Details`,()=>{console.log("Full URL:",i.href),console.log("Origin:",i.origin),console.log("Pathname:",i.pathname),console.log("Search:",i.search),console.log("Hash:",i.hash),console.log("Search Params:",i.searchParams),console.log("Hash Params:",i.hashParams)})}parseHashParams(e){if(!e||e==="#")return{};const t={},n=e.substring(1).split("&");for(const i of n){const[r,a]=i.split("=");r&&(t[r]=a||"")}return t}logTokens(e,t,s){this.group(e,`${t} - Token Details`,()=>{Object.entries(s).forEach(([n,i])=>{if(n.toLowerCase().includes("token")||n.toLowerCase().includes("secret")){const r=i?`${String(i).slice(0,8)}...${String(i).slice(-8)}`:"null";console.log(`${n}:`,r)}else console.log(`${n}:`,i)})})}logSession(e,t,s){if(!s){this.warn(e,`${t} - No session data`);return}this.group(e,`${t} - Session Details`,()=>{console.log("Session exists:",!!s),console.log("User ID:",s.user?.id||"No user"),console.log("User email:",s.user?.email||"No email"),console.log("Access token:",s.access_token?`${s.access_token.slice(0,20)}...`:"No token"),console.log("Refresh token:",s.refresh_token?`${s.refresh_token.slice(0,20)}...`:"No token"),console.log("Expires at:",s.expires_at||"No expiry"),console.log("Expires in:",s.expires_in||"No expiry info")})}logApiResponse(e,t,s){this.group(e,`${t} - API Response`,()=>{s.error&&(console.error("Error:",s.error),s.error.message&&console.error("Error message:",s.error.message),s.error.status&&console.error("Error status:",s.error.status),s.error.code&&console.error("Error code:",s.error.code)),s.data&&console.log("Data:",s.data),s.session&&this.logSession(e,"Response session",s.session)})}}const T=new pe,K="http://127.0.0.1:8090";T.log("[POCKETBASE]","Initializing PocketBase client",{url:K,environment:"production"});const me=new de(K);T.log("[POCKETBASE]","PocketBase client created successfully");me.authStore.onChange((o,e)=>{T.info("[POCKETBASE]","Low-level auth state change",{hasToken:!!o,hasRecord:!!e,userId:e?.id,userEmail:e?.email,timestamp:new Date().toISOString()}),o&&e?T.log("[POCKETBASE]","User authenticated",{userId:e.id,email:e.email,username:e.username}):!o&&!e&&T.log("[POCKETBASE]","User signed out")});T.log("[POCKETBASE]","PocketBase client initialization complete",{timestamp:new Date().toISOString()});const fe={};function ge(o,e){let t;try{t=o()}catch{return}return{getItem:n=>{var i;const r=h=>h===null?null:JSON.parse(h,void 0),a=(i=t.getItem(n))!=null?i:null;return a instanceof Promise?a.then(r):r(a)},setItem:(n,i)=>t.setItem(n,JSON.stringify(i,void 0)),removeItem:n=>t.removeItem(n)}}const k=o=>e=>{try{const t=o(e);return t instanceof Promise?t:{then(s){return k(s)(t)},catch(s){return this}}}catch(t){return{then(s){return this},catch(s){return k(s)(t)}}}},be=(o,e)=>(t,s,n)=>{let i={getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:l=>l,version:0,merge:(l,u)=>({...u,...l}),...e},r=!1;const a=new Set,h=new Set;let c;try{c=i.getStorage()}catch{}if(!c)return o((...l)=>{console.warn(`[zustand persist middleware] Unable to update item '${i.name}', the given storage is currently unavailable.`),t(...l)},s,n);const y=k(i.serialize),S=()=>{const l=i.partialize({...s()});let u;const d=y({state:l,version:i.version}).then(m=>c.setItem(i.name,m)).catch(m=>{u=m});if(u)throw u;return d},g=n.setState;n.setState=(l,u)=>{g(l,u),S()};const f=o((...l)=>{t(...l),S()},s,n);let b;const p=()=>{var l;if(!c)return;r=!1,a.forEach(d=>d(s()));const u=((l=i.onRehydrateStorage)==null?void 0:l.call(i,s()))||void 0;return k(c.getItem.bind(c))(i.name).then(d=>{if(d)return i.deserialize(d)}).then(d=>{if(d)if(typeof d.version=="number"&&d.version!==i.version){if(i.migrate)return i.migrate(d.state,d.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return d.state}).then(d=>{var m;return b=i.merge(d,(m=s())!=null?m:f),t(b,!0),S()}).then(()=>{u?.(b,void 0),r=!0,h.forEach(d=>d(b))}).catch(d=>{u?.(void 0,d)})};return n.persist={setOptions:l=>{i={...i,...l},l.getStorage&&(c=l.getStorage())},clearStorage:()=>{c?.removeItem(i.name)},getOptions:()=>i,rehydrate:()=>p(),hasHydrated:()=>r,onHydrate:l=>(a.add(l),()=>{a.delete(l)}),onFinishHydration:l=>(h.add(l),()=>{h.delete(l)})},p(),b||f},ye=(o,e)=>(t,s,n)=>{let i={storage:ge(()=>localStorage),partialize:p=>p,version:0,merge:(p,l)=>({...l,...p}),...e},r=!1;const a=new Set,h=new Set;let c=i.storage;if(!c)return o((...p)=>{console.warn(`[zustand persist middleware] Unable to update item '${i.name}', the given storage is currently unavailable.`),t(...p)},s,n);const y=()=>{const p=i.partialize({...s()});return c.setItem(i.name,{state:p,version:i.version})},S=n.setState;n.setState=(p,l)=>{S(p,l),y()};const g=o((...p)=>{t(...p),y()},s,n);n.getInitialState=()=>g;let f;const b=()=>{var p,l;if(!c)return;r=!1,a.forEach(d=>{var m;return d((m=s())!=null?m:g)});const u=((l=i.onRehydrateStorage)==null?void 0:l.call(i,(p=s())!=null?p:g))||void 0;return k(c.getItem.bind(c))(i.name).then(d=>{if(d)if(typeof d.version=="number"&&d.version!==i.version){if(i.migrate)return[!0,i.migrate(d.state,d.version)];console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return[!1,d.state];return[!1,void 0]}).then(d=>{var m;const[C,E]=d;if(f=i.merge(E,(m=s())!=null?m:g),t(f,!0),C)return y()}).then(()=>{u?.(f,void 0),f=s(),r=!0,h.forEach(d=>d(f))}).catch(d=>{u?.(void 0,d)})};return n.persist={setOptions:p=>{i={...i,...p},p.storage&&(c=p.storage)},clearStorage:()=>{c?.removeItem(i.name)},getOptions:()=>i,rehydrate:()=>b(),hasHydrated:()=>r,onHydrate:p=>(a.add(p),()=>{a.delete(p)}),onFinishHydration:p=>(h.add(p),()=>{h.delete(p)})},i.skipHydration||b(),f||g},Se=(o,e)=>"getStorage"in e||"serialize"in e||"deserialize"in e?((fe?"production":void 0)!=="production"&&console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."),be(o,e)):ye(o,e),Oe=Se;export{Oe as a,Ce as c,T as d,me as p};
//# sourceMappingURL=data-vendor-D4Uq14xw.js.map
